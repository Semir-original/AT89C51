;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Tue May 26 2020
; Processor: AT89C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      org   0000h
					

      jmp   Start

;====================================================================
; CODE SEGMENT
;====================================================================

      org   0100h
			mov Tmod ,#01
			mov TH0,#0AH
			mov TL0,#0h
		
Start:	
		mov p0,#0FFh ; Make port 0 input ...
		mov p1,#00h   ; Make port 1 output
		mov p2,#00h
   main:			
			mov p1,#01100000b
			lcall check
			mov p1,#10100000b
			lcall check 
			mov p1,#11000000b
			lcall check
		;	CALL DELAY
			sjmp main
	org 150h
	 check : 
				mov a,p0
				ORL  A,P0
				jNb psw.0,RETURN ;bit tavazon ro check mikone (age te'dad fardi 1 bashe toye AC ,1 mishe va age zoj bashe 0)
				CALL SATR
;				mov p0,#00h
;				mov p0,#0ffh
return:	ret
		
;error cpu load mide va hamunam to main hast
;roye kelid ha ghofl mikone ...(mire toye halghe check va age javab gereft ghofl mikone...) 


		satr:
;			mov b ,p0
;				cjne	a,b,main
			mov r7,p1
			xrl a,r7
			push acc
			
	
	xrl a,#0c7h;check 0
	pop acc
	jz bcd0
		  
	push acc
	xrl a,#0eh;check 1
	pop acc
	jz bcd1
	
	
	xrl a,#0ceh;check 2
	jz bcd2
	lcall reac
       
	xrl a,#0aeh;check 3
	jz bcd3
	lcall reac

	xrl a,#0dh;check 4
	jz bcd4
	lcall reac

	xrl a,#0cdh;check 5
	jz bcd5
	lcall reac

	xrl a,#0adh;check 6
	jz bcd6
	lcall reac

	xrl a,#0bh;check 7
	jz bcd7
	lcall reac

	xrl a,#0cbh;check 8
	jz bcd8
	lcall reac

	xrl a,#0abh;check 9
	jz bcd9
	lcall reac
		RET
			

		bcd0:
			mov p2,#00000000b
			RET	
	
		bcd1:
			mov p2,#00000001b
    		RET
		bcd2:
			mov p2,#00000010b
			RET
		bcd3:
			mov p2,#00000011b
			RET
		bcd4:
			mov p2,#00000100b
			RET
		bcd5:
			mov p2,#00000101b
			RET
		bcd6:
			mov p2,#00000110b
			RET
		bcd7:
			mov p2,#00000111b
			RET
		bcd8:
			mov p2,#00001000b
			RET
		bcd9:
			mov p2,#00001001b
			RET		

reac:
		mov a,p0
			xrl a,r7
		ret

Delay:
	mov r6,1
	lp:		
	SETB TR0
		again: jnb tf0,again	
				clr TR0
				clr TF0
		djnz r6,lp
				ret
Loop:	
      jmp Loop

;====================================================================
      END
